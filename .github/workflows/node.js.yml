name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  DOCKERHUB_REPO: nhadjarab/esgi-devops-repo
  USERNAME: "${{ secrets.DOCKERHUB_USERNAME }}"
  PASS: "${{ secrets.DOCKERHUB_PASS }}"

jobs:
  # front:
  #  runs-on: ubuntu-latest
  #  strategy:
  #    matrix:
  #      node-version: [8.x]
  #  steps:
  #  -
  #    name: Checkout
  #    uses: actions/checkout@v2
  #  -
  #    name: Use Node.js ${{ matrix.node-version }}
  #    uses: actions/setup-node@v1
  #    with:
  #      node-version: ${{ matrix.node-version }}
  #  -
  #    name: Install, Tests & build
  #    run: |
  #      npm install
  #      npm test
  #      npm run-script build
  #  -
  #    name: Docker build image front
  #    run: |
  #     docker build -t "$DOCKERHUB_REPO:front" -f Dockerfile.front .
  #  -
  #    name: Docker push image front
  #    run: |
  #      echo $PASS | docker login --username $USERNAME --password-stdin
  #      docker images
  #      docker push "$DOCKERHUB_REPO:front"

  # back:
  #  runs-on: ubuntu-latest
  #  strategy:
  #    matrix:
  #      node-version: [8.x]
  #  steps:
  #    -
  #      name: Checkout
  #      uses: actions/checkout@v2
  #    -
  #      name: Use Node.js ${{ matrix.node-version }}
  #      uses: actions/setup-node@v1
  #      with:
  #        node-version: ${{ matrix.node-version }}
  #    -
  #      name: Install & Tests
  #      run: |
  #        npm install
  #        npm test
  #    -
  #      name: Docker build image back
  #      run: docker build -t "$DOCKERHUB_REPO:back" -f Dockerfile.back .
  #    -
  #      name: Docker push image back
  #      run: |
  #        echo $PASS | docker login --username $USERNAME --password-stdin
  #        docker push "$DOCKERHUB_REPO:back"

         
  deploy:
    runs-on: ubuntu-latest
    # needs: [front, back]

    steps:
       - 
        name: add SSH key to ssh-agent
        run: |
          eval `ssh-agent -s`
          ssh-add - <<< "${{ secrets.SSH_KEY }}"
     
       - name: deploy
         uses: garygrossgarten/github-action-ssh@release
         with:
            host: ${{ secrets.HOST }}
            username: ubuntu
            privateKey: ${{ secrets.SSH_KEY}}
            command: 
              cd devops
              && sudo docker-compose pull
              && sudo docker-compose up -d 